{"version":3,"sources":["src/Geometry.bs.js","src/Draw.bs.js"],"names":["pi","Math","acos","distance","param","param$1","sqrt","pow","normalize","v2","v1","d","inverseOfPoint","centre","c2","c1","p2","p1","inverseDistance","match","exports","Geometry$Inversion","require","defaultColor","setDefaultStrokeStyle","ctx","strokeStyle","setDefaultFillStyle","fillStyle","circumference","$staropt$star","color","undefined","beginPath","arc","stroke","segment","match$1","moveTo","lineTo","point","fill"],"mappings":"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","file":"Main.3d3867db.map","sourceRoot":"..","sourcesContent":["// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE\n'use strict';\n\n\nvar pi = Math.acos(-1);\n\nfunction distance(param, param$1) {\n  return Math.sqrt(Math.pow(param[0] - param$1[0], 2) + Math.pow(param[1] - param$1[1], 2));\n}\n\nfunction normalize(param) {\n  var v2 = param[1];\n  var v1 = param[0];\n  var d = distance(/* tuple */[\n        v1,\n        v2\n      ], /* tuple */[\n        0,\n        0\n      ]);\n  if (d !== 0) {\n    return /* tuple */[\n            v1 / d,\n            v2 / d\n          ];\n  } else {\n    return /* tuple */[\n            v1,\n            v2\n          ];\n  }\n}\n\nfunction inverseOfPoint(param, param$1) {\n  var centre = param[/* centre */0];\n  var c2 = centre[1];\n  var c1 = centre[0];\n  var p2 = param$1[1];\n  var p1 = param$1[0];\n  var inverseDistance = Math.pow(param[/* radius */1], 2) / distance(/* tuple */[\n        c1,\n        c2\n      ], /* tuple */[\n        p1,\n        p2\n      ]);\n  var match = normalize(/* tuple */[\n        p1 - c1,\n        p2 - c2\n      ]);\n  return /* tuple */[\n          match[0] * inverseDistance + c1,\n          match[1] * inverseDistance + c2\n        ];\n}\n\nexports.pi = pi;\nexports.distance = distance;\nexports.normalize = normalize;\nexports.inverseOfPoint = inverseOfPoint;\n/* pi Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Geometry$Inversion = require(\"./Geometry.bs.js\");\n\nvar defaultColor = \"black\";\n\nfunction setDefaultStrokeStyle(ctx) {\n  ctx.strokeStyle = defaultColor;\n  return /* () */0;\n}\n\nfunction setDefaultFillStyle(ctx) {\n  ctx.fillStyle = defaultColor;\n  return /* () */0;\n}\n\nfunction circumference(param, $staropt$star, ctx) {\n  var centre = param[/* centre */0];\n  var color = $staropt$star !== undefined ? $staropt$star : defaultColor;\n  ctx.strokeStyle = color;\n  ctx.beginPath();\n  ctx.arc(centre[0], centre[1], param[/* radius */1], 0, Geometry$Inversion.pi * 2, true);\n  ctx.stroke();\n  ctx.strokeStyle = defaultColor;\n  return /* () */0;\n}\n\nfunction segment(param, $staropt$star, ctx) {\n  var match = param[1];\n  var match$1 = param[0];\n  var color = $staropt$star !== undefined ? $staropt$star : defaultColor;\n  ctx.strokeStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(match$1[0], match$1[1]);\n  ctx.lineTo(match[0], match[1]);\n  ctx.stroke();\n  ctx.strokeStyle = defaultColor;\n  return /* () */0;\n}\n\nfunction point(param, $staropt$star, ctx) {\n  var color = $staropt$star !== undefined ? $staropt$star : defaultColor;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.arc(param[0], param[1], 1, 0, Geometry$Inversion.pi * 2, true);\n  ctx.fill();\n  ctx.fillStyle = defaultColor;\n  return /* () */0;\n}\n\nexports.defaultColor = defaultColor;\nexports.setDefaultStrokeStyle = setDefaultStrokeStyle;\nexports.setDefaultFillStyle = setDefaultFillStyle;\nexports.circumference = circumference;\nexports.segment = segment;\nexports.point = point;\n/* Geometry-Inversion Not a pure module */\n"]}